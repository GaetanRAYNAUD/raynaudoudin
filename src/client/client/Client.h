// Generated by dia2code
#ifndef CLIENT__CLIENT__H
#define CLIENT__CLIENT__H

#include <memory>
#include <mutex>

namespace ai {
  class AI;
};
namespace engine {
  class Observer;
};
namespace render {
  class Scene;
};
namespace engine {
  class Command;
}

#include "ai/AI.h"
#include "engine/Observer.h"
#include "render/Scene.h"
#include "engine/Command.h"

namespace client {

  /// class Client - 
  class Client : public engine::Observer {
    // Associations
    // Attributes
  private:
    engine::Engine engine;
    std::unique_ptr<ai::AI> ai;
    mutable std::mutex mutex;
    // Operations
  public:
    Client ();
    void engineUpdating ();
    void engineUpdated ();
    void run ();
    // Setters and Getters
  };

};

#endif
