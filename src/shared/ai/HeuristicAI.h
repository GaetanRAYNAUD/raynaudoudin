// Generated by dia2code
#ifndef AI__HEURISTICAI__H
#define AI__HEURISTICAI__H

#include <random>

namespace ai {
  class PathMap;
};
namespace state {
  class Board;
};
namespace engine {
  class Engine;
};
namespace ai {
  class AI;
}

#include "PathMap.h"
#include "AI.h"

namespace ai {

  /// class HeuristicAI - 
  class HeuristicAI : public ai::AI {
    // Associations
    // Attributes
  protected:
    std::mt19937 randgen;
    PathMap unitTeam1PathMap;
    PathMap unitTeam2PathMap;
    PathMap houseTeam1PathMap;
    PathMap houseTeam2PathMap;
    PathMap castlePathMap;
    // Operations
  public:
    HeuristicAI (int randomSeed);
    void initPathMaps (const state::Board& board);
    void run (engine::Engine& engine);
    // Setters and Getters
    const std::mt19937& getRandgen() const;
    void setRandgen(const std::mt19937& randgen);
    const PathMap& getUnitTeam1PathMap() const;
    void setUnitTeam1PathMap(const PathMap& unitTeam1PathMap);
    const PathMap& getUnitTeam2PathMap() const;
    void setUnitTeam2PathMap(const PathMap& unitTeam2PathMap);
    const PathMap& getHouseTeam1PathMap() const;
    void setHouseTeam1PathMap(const PathMap& houseTeam1PathMap);
    const PathMap& getHouseTeam2PathMap() const;
    void setHouseTeam2PathMap(const PathMap& houseTeam2PathMap);
    const PathMap& getCastlePathMap() const;
    void setCastlePathMap(const PathMap& castlePathMap);
  };

};

#endif
