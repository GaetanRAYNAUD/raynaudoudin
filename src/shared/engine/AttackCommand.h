// Generated by dia2code
#ifndef ENGINE__ATTACKCOMMAND__H
#define ENGINE__ATTACKCOMMAND__H

#include <stack>
#include <memory>

namespace state {
  class State;
};
namespace engine {
  class Action;
  class Command;
}

#include "state/WeaponTypeId.h"
#include "CommandTypeId.h"
#include "Action.h"
#include "Command.h"

namespace engine {

  /// class AttackCommand - 
  class AttackCommand : public engine::Command {
    // Associations
    // Attributes
  protected:
    int idUnitAttacker;
    int idUnitDefender;
    state::WeaponTypeId weaponTypeId;
    // Operations
  public:
    AttackCommand (int idUnitAttacker, int idUnitDefender, state::WeaponTypeId weaponTypeId);
    /// 		
    CommandTypeId getTypeId () const;
    void execute (state::State& state, std::stack<std::shared_ptr<Action>>& actions);
    /// 	
    Command* clone () const;
    // Setters and Getters
    int getIdUnitAttacker() const;
    void setIdUnitAttacker(int idUnitAttacker);
    int getIdUnitDefender() const;
    void setIdUnitDefender(int idUnitDefender);
    state::WeaponTypeId getWeaponTypeId() const;
    void setWeaponTypeId(state::WeaponTypeId weaponTypeId);
  };

};

#endif
