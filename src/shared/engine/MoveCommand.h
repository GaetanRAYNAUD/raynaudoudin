// Generated by dia2code
#ifndef ENGINE__MOVECOMMAND__H
#define ENGINE__MOVECOMMAND__H

#include <stack>
#include <memory>
#include <json/json.h>

namespace state {
  class State;
};
namespace engine {
  class Action;
  class Command;
  class MoveCommand;
}

#include "state/Direction.h"
#include "CommandTypeId.h"
#include "Action.h"
#include "Command.h"

namespace engine {

  /// class MoveCommand - 
  class MoveCommand : public engine::Command {
    // Attributes
  protected:
    int idUnit;
    state::Direction direction;
    // Operations
  public:
    MoveCommand (int idUnit, state::Direction direction);
    CommandTypeId getTypeId () const;
    void execute (state::State& state, std::stack<std::shared_ptr<Action>>& actions);
    Command* clone () const;
    void serialize (Json::Value& out) const;
    static MoveCommand* deserialize (const Json::Value& in);
    // Setters and Getters
    int getIdUnit() const;
    void setIdUnit(int idUnit);
    state::Direction getDirection() const;
    void setDirection(state::Direction direction);
  };

};

#endif
